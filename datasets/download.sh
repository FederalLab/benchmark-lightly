#!/bin/bash
wget_from_google_driver(){
    # args: 
    #       fileid: the fileid generated by google driver share link.
    #       filename: the saved filename.
    wget --load-cookies /tmp/cookies.txt "https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=$1' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=$1" -O $2 && rm -rf /tmp/cookies.txt
}

wget_https(){
    # args: 
    #       https address.
    wget --no-check-certificate --no-proxy $1
}

RED_COLOR='\033[0;31m'
GREEN_COLOR='\033[0;32m'
YELOW_COLOR='\033[0;33m'
BLUE_COLOR='\033[0;34m'
PINK='\033[0;35m'
RES='\033[0m'

HEAD="${BLUE_COLOR}<OpenFed>${RES}"

# Federated CIFAR100 TFF
echo -e "$HEAD: Downloading Federated CIFAR100 TFF from FedML..."
mkdir Federated_CIFAR100_TFF && cd Federated_CIFAR100_TFF && wget_https https://fedml.s3-us-west-1.amazonaws.com/fed_cifar100.tar.bz2

echo -e "$HEAD: Unziping downloaded dataset..."
tar -xvf fed_cifar100.tar.bz2 && rm fed_cifar100.tar.bz2 && cd ..

# EMNIST TFF
echo -e "$HEAD: Downloading EMNIST TFF from FedML..."
mkdir Federated_EMNIST_TFF && cd Federated_EMNIST_TFF && wget_https https://fedml.s3-us-west-1.amazonaws.com/fed_emnist.tar.bz2

echo -e "$HEAD: Unziping downloaded dataset..."
tar -xvf fed_emnist.tar.bz2 && rm fed_emnist.tar.bz2 && cd ..

# Federated Shakespeare FedProx


echo -e "$HEAD: Downloading Federated Shakespeare FedProx..."
mkdir Federated_Shakespeare_FedProx && cd Federated_Shakespeare_FedProx
wget_from_google_driver '1mD6_4ju7n2WFAahMKDtozaGxUASaHAPH' 'all_data_niid_2_keep_0_train_8.json'
wget_from_google_driver '1GERQ9qEJjXk_0FXnw1JbjuGCI-zmmfsk' 'all_data_niid_2_keep_0_test_8.json'
cd ..

# Federated Shakespeare TFF
echo -e "$HEAD: Downloading Federated Shakespeare TFF from FedML..."
mkdir Federated_Shakespeare_TFF && cd Federated_Shakespeare_TFF && wget_https https://fedml.s3-us-west-1.amazonaws.com/shakespeare.tar.bz2

echo -e "$HEAD: Unziping downloaded dataset..."
tar -xvf shakespeare.tar.bz2 && rm shakespeare.tar.bz2 && cd ..

# Federated StackOverFlow TFF
echo -e "$HEAD: Download Federated StackOverFlow TFF from FedML..."
mkdir Federated_StackOverFlow_TFF && cd Federated_StackOverFlow_TFF
wget_https https://fedml.s3-us-west-1.amazonaws.com/stackoverflow.tag_count.tar.bz2
wget_https https://fedml.s3-us-west-1.amazonaws.com/stackoverflow.word_count.tar.bz2
wget_https https://fedml.s3-us-west-1.amazonaws.com/stackoverflow.tar.bz2
wget_https https://fedml.s3-us-west-1.amazonaws.com/stackoverflow_nwp.pkl

echo -e "$HEAD: Unziping downloaded dataset..."
tar -xvf stackoverflow.tag_count.tar.bz2 && rm -rf stackoverflow.tag_count.tar.bz2
tar -xvf stackoverflow.word_count.tar.bz2 && rm -rf stackoverflow.word_count.tar.bz2
tar -xvf stackoverflow.tar.bz2 && rm -rf stackoverflow.tar.bz2
cd ..

# # ImageNet
# echo -e "$HEAD: Downloading ImageNet..."
# mkdir others && cd others && echo -e "$HEAD: Please download dataset and save then under imagenet1k_rawdata."
# # hdfs dfs -copyToLocal hdfs://harunava/home/byte_ailab_vc/arnold_dataset/imagenet1k_rawdata .
# cd imagenet1k_rawdata/

# mkdir train && mv ILSVRC2012_img_train_full.tar train/ && cd train
# tar -xvf ILSVRC2012_img_train.tar && rm -f ILSVRC2012_img_train.tar
# find . -name "*.tar" | while read NAME ; do mkdir -p "${NAME%.tar}"; tar -xvf "${NAME}" -C "${NAME%.tar}"; rm -f "${NAME}"; done
# cd ..

# mkdir val && mv ILSVRC2012_img_val.tar val/ && cd val && tar -xvf ILSVRC2012_img_val.tar
# wget -qO- https://raw.githubusercontent.com/soumith/imagenetloader.torch/master/valprep.sh | bash

# cd ../..